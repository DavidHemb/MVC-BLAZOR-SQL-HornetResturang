@using DataAccess.Models;
@using DataAccess.Data;
@using DataAccess
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager NavigationManager
@inject Hornet.Service.CategoryService CategoryService
@*@{
     protected override async Task OnInitializedAsync()
     {
        var user = await _userManager.FindByEmailAsync(model.Email);
        var roles = await _userManager.GetRolesAsync(user);
     }
}*@

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Hörnet</a>
        <button title="Navigation menu" class="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>
<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Hem
            </NavLink>
        </div>
        <div class="nav-item px-3">
            
        </div>
        <div class="nav-item px-3" @onclick="ToggleCategoryMenu">
            <NavLink class="nav-link" href="menu">
                <span class="oi oi-list" aria-hidden="true"></span> Meny
            </NavLink>
        </div>
        @if (Categories is not null && collapseCategoryMenu is false)
        {
            @foreach (var category in Categories)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"menu/productcategory/{category.Id}")">
                        <span class="oi oi-list" aria-hidden="true"></span> @category.Name
                    </NavLink>
                </div>
            }
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="AboutUs">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Om oss
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private List<Category>? Categories { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Categories = (List<Category>) await CategoryService.GetAllWithProducts();
    }
    private bool collapseCategoryMenu = true;
    private string? NavMenuCssClass => collapseCategoryMenu ? "collapse" : null;
    private void ToggleCategoryMenu()
    {
        collapseCategoryMenu = !collapseCategoryMenu;
    }
}
