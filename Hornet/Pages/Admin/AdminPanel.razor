@using DataAccess.Models;
@using Hornet_Models.ModelsDTO;
@using Hornet.Service;
@using System;
@using System.Collections.Generic;
@using LiveCharts;
@inject Hornet.Service.AdminService AdminService
@inject Hornet.Service.OrderProductsService orderProductService
@inject Hornet.Service.ProductService productService
@inject Hornet.Service.CategoryService CategoryService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject HttpClient httpclient
@page "/AdminPanel"
@code {
    private List<OrderDTO> OrderProdDTO;
    private List<ProductWithQuantityDTO> TopSoldProducts;
    private List<Category> CategoryWProducts;
    private List<ProductCategory> ProductCategory;
    private HashSet<string> hiddenTables = new HashSet<string>();
    private void ToggleTable(string categoryName)
    {
        if (hiddenTables.Contains(categoryName))
        {
            hiddenTables.Remove(categoryName);
        }
        else
        {
            hiddenTables.Add(categoryName);
        }
    }
    private string GetHiddenTableStyle(string categoryName) =>
        hiddenTables.Contains(categoryName) ? "display: table;" : "display: none;";
    class CategoryClass
    {
        public string Name { get; set; }
        public int Sells { get; set; }
    }
    class TopProdinCateClass
    {
        public string CategoryName { get; set; }
        public string ProductName { get; set; }
        public int ProductQuantity { get; set; }
    }
    List<CategoryClass> Categories = new List<CategoryClass>();
    int OrderId = 0;
    int i = 0;
    int counter = 0;
    protected override async Task OnInitializedAsync()
    {
        OrderProdDTO = (List<OrderDTO>)await orderProductService.GetAll();
        OrderProdDTO = OrderProdDTO.OrderByDescending(o => o.Order.OrderDate).ToList();
        TopSoldProducts = (List<ProductWithQuantityDTO>)await productService.GetMostSoldProducts();
        CategoryWProducts = (List<Category>)await CategoryService.GetAllWithProducts();
        ProductCategory = (List<ProductCategory>)await CategoryService.GetAllWithProductsFull();
    }
    //ShowMore Varibles
    bool TimespanSales = false;
    bool TimespanOrders = false;
    bool TimespanProduct = false;
    bool TimeSpanCategories = false;
    int ShowMoreSalesInt = 0;
    int ShowMoreOrderInt = 0;
    int ShowMoreOrderStatusInt = 0;
    int ShowMoreTrafficInt = 0;
    int ShowMoreCategoriesInt = 0;
    int ShowMoreProductsInt = 0;
    //DateTimes ShowMore
    DateTime StartTotalSalesDynamic = DateTime.Now;
    DateTime EndTotalSalesDynamic = DateTime.Now;
    DateTime StartTotalOrdersDynamic = DateTime.Now;
    DateTime EndTotalOrdersDynamic = DateTime.Now;
    DateTime StartTotalOrderStatusDynamic = DateTime.Now;
    DateTime EndTotalOrderStatusDynamic = DateTime.Now;
    DateTime StartTrafficDynamic = DateTime.Now;
    DateTime EndTrafficDynamic = DateTime.Now;
    DateTime StartTopCategoryDynamic = DateTime.Now;
    DateTime EndTopCategoryDynamic = DateTime.Now;
    DateTime StartTopProductDynamic = DateTime.Now;
    DateTime EndTopProductDynamic = DateTime.Now;
}
@attribute [Authorize(Roles = "Admin")]
<PageTitle>AdminPanel</PageTitle>
<AdminHeader></AdminHeader>
<h1 style="text-align:center;">Admin Panel</h1>
@if (OrderProdDTO != null)
{
    <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
        @*TOTAL SALES STAT*@
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Gross Income</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Today</p>
                    <p>Weekly</p>
                    <p>Monthly</p>
                    <p>Yearly</p>
                    <p>Since start</p>
                </div>
                <div style="display:flex; justify-content:space-around;">
                    @{
                        i = 0;
                        double TodaySales = 0;
                        double WeeklySales = 0;
                        double MonthlySales = 0;
                        double YearlySales = 0;
                        double SinceStartSales = 0;
                        int QuantitySales = 0;
                    }
                    @foreach (var order in OrderProdDTO)
                    {
                        if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-1))
                        {

                            while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                            {
                                TodaySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                WeeklySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                MonthlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                YearlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                SinceStartSales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                QuantitySales++;
                            }
                        }
                        else if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-7))
                        {
                            while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                            {
                                WeeklySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                MonthlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                YearlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                SinceStartSales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                QuantitySales++;
                            }
                        }
                        else if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddMonths(-1))
                        {
                            while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                            {
                                MonthlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                YearlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                SinceStartSales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                QuantitySales++;
                            }

                        }
                        else if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddYears(-1))
                        {
                            while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                            {
                                YearlySales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                SinceStartSales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                QuantitySales++;
                            }
                        }
                        else
                        {
                            while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                            {
                                SinceStartSales += Math.Round(OrderProdDTO[i].Product.Price, 0);
                                QuantitySales++;
                            }
                        }
                        QuantitySales = 0;
                        i++;
                    }
                    <p>@TodaySales Kr</p>
                    <p>@WeeklySales Kr</p>
                    <p>@MonthlySales Kr</p>
                    <p>@YearlySales Kr</p>
                    <p>@SinceStartSales Kr</p>
                </div>
            </div>
            @*SHOW MORE SALES STAT*@
            <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
                @if (ShowMoreSalesInt == 0 && TimespanSales == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreSalesInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreSalesInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <form style="text-align: center;" onsubmit="">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTotalSalesDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTotalSalesDynamic">
                            <input type="checkbox" @bind="TimespanSales">
                        </div>
                    </form>
                }
                else if (ShowMoreSalesInt != 0 && TimespanSales == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreSalesInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreSalesInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <p>Select close to filter here</p>
                }
                else if (ShowMoreSalesInt == 0 && TimespanSales != false)
                {
                    <p>Uncheck to filter here</p>
                    <form style="text-align: center;" onsubmit="">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTotalSalesDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTotalSalesDynamic">
                            <input type="checkbox" @bind="TimespanSales">
                        </div>
                    </form>
                }
                else
                {
                    <p>Error</p>
                }
            </div>
            @if (TimespanSales == true && ShowMoreSalesInt == 0)
            {
                if (StartTotalSalesDynamic < EndTotalSalesDynamic)
                {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>OrderID</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                i = 0;
                            }
                            @foreach (var order in OrderProdDTO)
                            {
                                if (StartTotalSalesDynamic <= OrderProdDTO[i].Order.OrderDate && OrderProdDTO[i].Order.OrderDate <= EndTotalSalesDynamic)
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].Product.Price</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                                i++;
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Start date cannot be greater then end date</p>
                }
            }
            @if (ShowMoreSalesInt != 0)
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>OrderID</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            i = 0;
                        }
                        @foreach (var orders in OrderProdDTO.OrderByDescending(op => op.Order.OrderDate))
                        {
                            //SHOW MORE TODAY
                            if (ShowMoreSalesInt == 1)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-1))
                                {
                                    while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                                    {
                                        <tr>
                                            <th>@OrderProdDTO[i].Order.Id</th>
                                            <th>@OrderProdDTO[i].Product.Name</th>
                                            <th>@OrderProdDTO[i].Product.Price</th>
                                            <th>@OrderProdDTO[i].Order.OrderDate</th>
                                        </tr>
                                        QuantitySales++;
                                    }
                                    QuantitySales = 0;
                                }
                            }
                            //SHOW MORE WEEKLY
                            else if (ShowMoreSalesInt == 2)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-7))
                                {
                                    while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                                    {
                                        <tr>
                                            <th>@OrderProdDTO[i].Order.Id</th>
                                            <th>@OrderProdDTO[i].Product.Name</th>
                                            <th>@OrderProdDTO[i].Product.Price</th>
                                            <th>@OrderProdDTO[i].Order.OrderDate</th>
                                        </tr>
                                        QuantitySales++;
                                    }
                                    QuantitySales = 0;
                                }
                            }
                            //SHOW MORE MONTHLY
                            else if (ShowMoreSalesInt == 3)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddMonths(-1))
                                {

                                    while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                                    {
                                        <tr>
                                            <th>@OrderProdDTO[i].Order.Id</th>
                                            <th>@OrderProdDTO[i].Product.Name</th>
                                            <th>@OrderProdDTO[i].Product.Price</th>
                                            <th>@OrderProdDTO[i].Order.OrderDate</th>
                                        </tr>
                                        QuantitySales++;
                                    }
                                    QuantitySales = 0;
                                }
                            }
                            //SHOW MORE YEARLY
                            else if (ShowMoreSalesInt == 4)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddYears(-1))
                                {

                                    while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                                    {
                                        <tr>
                                            <th>@OrderProdDTO[i].Order.Id</th>
                                            <th>@OrderProdDTO[i].Product.Name</th>
                                            <th>@OrderProdDTO[i].Product.Price</th>
                                            <th>@OrderProdDTO[i].Order.OrderDate</th>
                                        </tr>
                                        QuantitySales++;
                                    }
                                    QuantitySales = 0;
                                }
                            }
                            //SHOW MORE SINCESTART
                            else if (ShowMoreSalesInt == 5)
                            {

                                while (OrderProdDTO[i].OrderProduct.Quantity > QuantitySales)
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].Product.Price</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                    QuantitySales++;
                                }
                                QuantitySales = 0;
                            }
                            i++;
                        }
                    </tbody>
                </table>
            }
        </div>
        @*NUMBER OF ORDERS STAT*@
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Number of Orders</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Today</p>
                    <p>Weekly</p>
                    <p>Monthly</p>
                    <p>Yearly</p>
                    <p>Since start</p>
                </div>
                @{
                    i = 0;
                    double TodayOrders = 0;
                    double WeeklyOrders = 0;
                    double MonthlyOrders = 0;
                    double YearlyOrders = 0;
                    double SinceStartOrders = 0;
                    List<int> Ids = new List<int>();
                }
                @foreach (var order in OrderProdDTO)
                {
                    bool duplicate = false;
                    foreach (var oldorder in Ids)
                    {
                        if (order.Order.Id == oldorder)
                        {
                            duplicate = true;
                            break;
                        }
                    }
                    if (!duplicate)
                    {
                        Ids.Add(order.Order.Id);
                        if (order.Order.OrderDate > DateTime.Now.AddDays(-1))
                        {
                            TodayOrders++;
                            WeeklyOrders++;
                            MonthlyOrders++;
                            YearlyOrders++;
                            SinceStartOrders++;
                        }
                        else if (order.Order.OrderDate > DateTime.Now.AddDays(-7))
                        {
                            WeeklyOrders++;
                            MonthlyOrders++;
                            YearlyOrders++;
                            SinceStartOrders++;
                        }
                        else if (order.Order.OrderDate > DateTime.Now.AddMonths(-1))
                        {
                            MonthlyOrders++;
                            YearlyOrders++;
                            SinceStartOrders++;
                        }
                        else if (order.Order.OrderDate > DateTime.Now.AddYears(-1))
                        {
                            YearlyOrders++;
                            SinceStartOrders++;
                        }
                        else
                        {
                            SinceStartOrders++;
                        }
                    }
                }
                <div style="display:flex; justify-content:space-around;">
                    <p>@TodayOrders</p>
                    <p>@WeeklyOrders</p>
                    <p>@MonthlyOrders</p>
                    <p>@YearlyOrders</p>
                    <p>@SinceStartOrders</p>
                </div>
            </div>
            @*SHOW MORE ORDERS STAT*@
            <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
                @if (ShowMoreOrderInt == 0 && TimespanOrders == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreOrderInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreOrderInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <form style="text-align: center;">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTotalOrdersDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTotalOrdersDynamic">
                            <input type="checkbox" @bind="TimespanOrders">
                        </div>
                    </form>
                }
                else if (ShowMoreOrderInt != 0 && TimespanOrders == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreOrderInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreOrderInt ">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <p>Select close to filter here</p>
                }
                else if (ShowMoreOrderInt == 0 && TimespanOrders != false)
                {
                    <p>Uncheck to filter here</p>
                    <form style="text-align: center;">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTotalOrdersDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTotalOrdersDynamic">
                            <input type="checkbox" @bind="TimespanOrders">
                        </div>
                    </form>
                }
                else
                {
                    <p>Error</p>
                }
            </div>
            @if (TimespanOrders == true && ShowMoreOrderInt == 0)
            {
                if (StartTotalOrdersDynamic < EndTotalOrdersDynamic)
                {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                i = 0;
                            }
                            @foreach (var order in OrderProdDTO)
                            {

                                if (StartTotalOrdersDynamic <= OrderProdDTO[i].Order.OrderDate && OrderProdDTO[i].Order.OrderDate <= EndTotalOrdersDynamic)
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                                i++;
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Start date cannot be greater then end date</p>
                }
            }
            @if (ShowMoreOrderInt != 0)
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            i = 0;
                        }
                        @foreach (var order in OrderProdDTO)
                        {
                            //SHOW MORE TODAY
                            if (ShowMoreOrderInt == 1)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-1))
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                            }
                            //SHOW MORE WEEKLY
                            else if (ShowMoreOrderInt == 2)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddDays(-7))
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                            }
                            //SHOW MORE MONTHLY
                            else if (ShowMoreOrderInt == 3)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddMonths(-1))
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                            }
                            //SHOW MORE YEARLY
                            else if (ShowMoreOrderInt == 4)
                            {
                                if (OrderProdDTO[i].Order.OrderDate > DateTime.Now.AddYears(-1))
                                {
                                    <tr>
                                        <th>@OrderProdDTO[i].Order.Id</th>
                                        <th>@OrderProdDTO[i].Product.Name</th>
                                        <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                        <th>@OrderProdDTO[i].Order.OrderDate</th>
                                    </tr>
                                }
                            }
                            //SHOW MORE SINCESTART
                            else if (ShowMoreOrderInt == 5)
                            {
                                <tr>
                                    <th>@OrderProdDTO[i].Order.Id</th>
                                    <th>@OrderProdDTO[i].Product.Name</th>
                                    <th>@OrderProdDTO[i].OrderProduct.Quantity</th>
                                    <th>@OrderProdDTO[i].Order.OrderDate</th>
                                </tr>
                            }
                            i++;
                        }
                    </tbody>
                </table>
            }
        </div>
        @*TOP 3 CATEGORIES STAT*@
        @{
            DateTime DateCate = DateTime.MinValue;
            if (ShowMoreCategoriesInt != 0)
            {
                if (ShowMoreCategoriesInt == 1)
                {
                    DateCate = DateTime.Now.AddDays(-1);
                }
                else if (ShowMoreCategoriesInt == 2)
                {
                    DateCate = DateTime.Now.AddDays(-7);
                }
                else if (ShowMoreCategoriesInt == 3)
                {
                    DateCate = DateTime.Now.AddMonths(-1);
                }
                else if (ShowMoreCategoriesInt == 4)
                {
                    DateCate = DateTime.Now.AddYears(-1);
                }
            }
            //TOP PRODUCTS
            List<ProductWithQuantityDTO> TopProdCate = new List<ProductWithQuantityDTO>();
            List<TopProdinCateClass> TopProdinCate = new List<TopProdinCateClass>();
            bool foundCate = false;
            foreach (var order in OrderProdDTO)
            {
                if (TimeSpanCategories != false)
                {
                    if (StartTopCategoryDynamic <= order.Order.OrderDate && order.Order.OrderDate <= EndTopCategoryDynamic)
                    {
                        if (TopProdCate.Count() == 0)
                        {
                            TopProdCate.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                        }
                        else
                        {
                            foundCate = false;
                            foreach (var prod in TopProdCate)
                            {
                                if (prod.Product.Name == order.Product.Name)
                                {
                                    prod.Quantity += order.OrderProduct.Quantity;
                                    foundCate = true;
                                }
                            }
                            if (!foundCate)
                            {
                                TopProdCate.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                            }
                        }
                    }
                }
                else
                {
                    if (order.Order.OrderDate > DateCate)
                    {
                        if (TopProdCate.Count() == 0)
                        {
                            TopProdCate.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                        }
                        else
                        {
                            foundCate = false;
                            foreach (var prod in TopProdCate)
                            {
                                if (prod.Product.Name == order.Product.Name)
                                {
                                    prod.Quantity += order.OrderProduct.Quantity;
                                    foundCate = true;
                                }
                            }
                            if (!foundCate)
                            {
                                TopProdCate.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                            }
                        }
                    }
                }
            }
            TopProdCate = TopProdCate.OrderByDescending(o => o.Quantity).ToList();
            //TOP CATEGORIES
            Categories.Clear();
            int ProductId = 0;
            string CategoryName = "";
            bool done = false;
            bool ProdinCateBool = false;
            foreach (var categories in CategoryWProducts)
            {
                Categories.Add(new CategoryClass { Name = categories.Name, Sells = 0 });
            }
            //FIND PRODUCT
            foreach (var sold in TopProdCate)
            {
                if (done)
                {
                    done = false;
                }
                ProductId = sold.Product.Id;
                //FIND LINK TO CATEGORY
                foreach (var Link in ProductCategory)
                {
                    if (done)
                    {
                        break;
                    }
                    //IF FOUND PRODUCT
                    else if (ProductId == Link.ProductId)
                    {
                        CategoryName = Link.Category.Name;
                        //FIND CATEGORY
                        foreach (var categories in Categories)
                        {
                            if (done)
                            {
                                break;
                            }
                            //IF FOUND CATEGORY
                            else if (categories.Name == CategoryName)
                            {
                                categories.Sells += sold.Quantity;
                                if (TopProdinCate.Count() == 0)
                                {
                                    TopProdinCate.Add(new TopProdinCateClass { CategoryName = categories.Name, ProductName = sold.Product.Name, ProductQuantity = sold.Quantity });
                                }
                                else
                                {
                                    ProdinCateBool = false;
                                    foreach (var ProdinCate in TopProdinCate)
                                    {
                                        if (ProdinCateBool)
                                        {
                                            break;
                                        }
                                        if (ProdinCate.ProductName == sold.Product.Name)
                                        {
                                            ProdinCate.ProductQuantity += sold.Quantity;
                                            ProdinCateBool = true;
                                        }
                                    }
                                    if (!ProdinCateBool)
                                    {
                                        TopProdinCate.Add(new TopProdinCateClass { CategoryName = categories.Name, ProductName = sold.Product.Name, ProductQuantity = sold.Quantity });
                                    }
                                }
                                done = true;
                            }
                        }
                    }
                }

            }
            TopProdinCate = TopProdinCate.OrderByDescending(o => o.ProductQuantity).ToList();
        }
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Top 3 Categories(Most sold)</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>2nd</p>
                    <p>1st</p>
                    <p>3rd</p>
                </div>
                <div style="display:grid;grid-template-columns:1fr 1fr 1fr; justify-content:space-around;">
                    @if (Categories != null)
                    {
                        Categories = Categories.OrderByDescending(op => op.Sells).ToList();
                        if (Categories.Count() >= 2)
                        {
                            <p>@Categories[1].Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (Categories.Count() >= 1)
                        {
                            <p>@Categories[0].Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (Categories.Count() >= 3)
                        {
                            <p>@Categories[2].Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (Categories.Count() >= 2)
                        {
                            <p>Sold: @Categories[1].Sells</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                        if (Categories.Count() >= 1)
                        {
                            <p>Sold: @Categories[0].Sells</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                        if (Categories.Count() >= 3)
                        {
                            <p>Sold: @Categories[2].Sells</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                    }
                </div>
            </div>
            @*SHOW MORE CATEGORIES STAT*@
            <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
                @if (ShowMoreCategoriesInt == 0 && TimeSpanCategories == false)
                {
                    <form style="margin: auto;">
                        @if (ShowMoreCategoriesInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreCategoriesInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <form style="text-align: center;">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTopCategoryDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTopCategoryDynamic">
                            <input type="checkbox" @bind="TimeSpanCategories">
                        </div>
                    </form>
                }
                else if (ShowMoreCategoriesInt != 0 && TimeSpanCategories == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreCategoriesInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreCategoriesInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <p>Select close to filter here</p>
                }
                else if (ShowMoreCategoriesInt == 0 && TimeSpanCategories != false)
                {
                    <p>Uncheck to filter here</p>
                    <form style="text-align: center;" onsubmit="">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTopCategoryDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTopCategoryDynamic">
                            <input type="checkbox" @bind="TimeSpanCategories">
                        </div>
                    </form>
                }
                else
                {
                    <p>Error</p>
                }
            </div>
            @if (TimeSpanCategories == true && ShowMoreCategoriesInt == 0)
            {
                if (StartTopCategoryDynamic > EndTopCategoryDynamic)
                {
                    <p>Start date cannot be greater then end date</p>
                }
            }
            @if (ShowMoreCategoriesInt != 0 || TimeSpanCategories == true)
            {

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Expand/Collapse</th>
                            <th>Name</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var categories in Categories)
                        {
                            if (categories.Sells != 0)
                            {
                                <tr>
                                    <td><button @onclick="() => ToggleTable(categories.Name)">Expand/Collapse</button></td>
                                    <td>@categories.Name</td>
                                    <td>@categories.Sells</td>
                                </tr>
                                <tr id="@($"hiddenTable-{categories.GetHashCode()}")" style="@GetHiddenTableStyle(categories.Name)">
                                    <td colspan="3">
                                        <h4>Top Products for @categories.Name</h4>
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Quantity</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var prod in TopProdinCate)
                                                {
                                                    if (prod.CategoryName == categories.Name)
                                                    {
                                                        <tr>
                                                            <td>@prod.ProductName</td>
                                                            <td>@prod.ProductQuantity</td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
        </div>
        @*TOP 3 PRODUCTS STAT*@
        @{
            DateTime Date = DateTime.MinValue;
            if (ShowMoreProductsInt != 0)
            {
                if (ShowMoreProductsInt == 1)
                {
                    Date = DateTime.Now.AddDays(-1);
                }
                else if (ShowMoreProductsInt == 2)
                {
                    Date = DateTime.Now.AddDays(-7);
                }
                else if (ShowMoreProductsInt == 3)
                {
                    Date = DateTime.Now.AddMonths(-1);
                }
                else if (ShowMoreProductsInt == 4)
                {
                    Date = DateTime.Now.AddYears(-1);
                }
            }
            //TOP PRODUCTS
            List<ProductWithQuantityDTO> TopProd = new List<ProductWithQuantityDTO>();
            bool found = false;
            foreach (var order in OrderProdDTO)
            {
                if (TimespanProduct != false)
                {
                    if (StartTopProductDynamic <= order.Order.OrderDate && order.Order.OrderDate <= EndTopProductDynamic)
                    {
                        if (TopProd.Count() == 0)
                        {
                            TopProd.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                        }
                        else
                        {
                            found = false;
                            foreach (var prod in TopProd)
                            {
                                if (prod.Product.Name == order.Product.Name)
                                {
                                    prod.Quantity += order.OrderProduct.Quantity;
                                    found = true;
                                }
                            }
                            if (!found)
                            {
                                TopProd.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                            }
                        }
                    }
                }
                else
                {
                    if (order.Order.OrderDate > Date)
                    {
                        if (TopProd.Count() == 0)
                        {
                            TopProd.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                        }
                        else
                        {
                            found = false;
                            foreach (var prod in TopProd)
                            {
                                if (prod.Product.Name == order.Product.Name)
                                {
                                    prod.Quantity += order.OrderProduct.Quantity;
                                    found = true;
                                }
                            }
                            if (!found)
                            {
                                TopProd.Add(new ProductWithQuantityDTO { Product = order.Product, Quantity = order.OrderProduct.Quantity, DateTime = DateTime.Now, CategoryId = 0 });
                            }
                        }
                    }
                }
            }
            TopProd = TopProd.OrderByDescending(o => o.Quantity).ToList();
        }
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Top 3 Products (Most sold)</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>2nd</p>
                    <p>1st</p>
                    <p>3rd</p>
                </div>
                <div style="display:grid;grid-template-columns:1fr 1fr 1fr; justify-content:space-around;">
                    @if (TopProd != null)
                    {
                        if (TopProd.Count() >= 2)
                        {
                            <p>@TopProd[1].Product.Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (TopProd.Count() >= 1)
                        {
                            <p>@TopProd[0].Product.Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (TopProd.Count() >= 3)
                        {
                            <p>@TopProd[2].Product.Name</p>
                        }
                        else
                        {
                            <p>None</p>
                        }
                        if (TopProd.Count() >= 2)
                        {
                            <p>Sold: @TopProd[1].Quantity</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                        if (TopProd.Count() >= 1)
                        {
                            <p>Sold: @TopProd[0].Quantity</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                        if (TopProd.Count() >= 3)
                        {
                            <p>Sold: @TopProd[2].Quantity</p>
                        }
                        else
                        {
                            <p>0</p>
                        }
                    }
                </div>
            </div>
            @*SHOW MORE PRODUCTS STAT*@
            <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
                @if (ShowMoreProductsInt == 0 && TimespanProduct == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreProductsInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreProductsInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <form style="text-align: center;" onsubmit="">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTopProductDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTopProductDynamic">
                            <input type="checkbox" @bind="TimespanProduct">
                        </div>
                    </form>
                }
                else if (ShowMoreProductsInt != 0 && TimespanProduct == false)
                {
                    <form style="margin:auto;">
                        @if (ShowMoreProductsInt != null)
                        {
                            <select class="form-select" aria-label="Choose category" name="categoryId" id="category-dropdown" style="text-align: center; width: 100%;" @bind="ShowMoreProductsInt">
                                <option value="0">Show more/Close</option>
                                <option value="1">Today</option>
                                <option value="2">Weekly</option>
                                <option value="3">Monthly</option>
                                <option value="4">Yearly</option>
                                <option value="5">Since start</option>
                            </select>
                        }
                    </form>
                    <p>Select close to filter here</p>
                }
                else if (ShowMoreProductsInt == 0 && TimespanProduct != false)
                {
                    <p>Uncheck to filter here</p>
                    <form style="text-align: center;" onsubmit="">
                        <label>Select your own timespan</label>
                        <div style="display: grid;grid-template-columns: 0.5fr 1fr;text-align: center;">
                            <label>Start</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="StartTopProductDynamic">
                            <label>End</label>
                            <input type="date" style="width:100%; text-align: center; margin: auto;" @bind="EndTopProductDynamic">
                            <input type="checkbox" @bind="TimespanProduct">
                        </div>
                    </form>
                }
                else
                {
                    <p>Error</p>
                }
            </div>
            @if (TimespanProduct == true && ShowMoreProductsInt == 0)
            {
                if (StartTopProductDynamic > EndTopProductDynamic)
                {
                    <p>Start date cannot be greater then end date</p>
                }
            }
            @if (ShowMoreProductsInt != 0 || TimespanProduct == true)
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prod in TopProd)
                        {
                            <tr>
                                <th>@prod.Product.Name</th>
                                <th>@prod.Quantity</th>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}
else if (OrderProdDTO == null)
{
    <h1>NO ORDERS IN DATABASE</h1>
    <div style="display: grid;grid-template-columns: 1fr 1fr;text-align: center;">
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Total sales</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Today</p>
                    <p>Weekly</p>
                    <p>Monthly</p>
                    <p>Yearly</p>
                    <p>Since start</p>
                </div>
                <div style="display:flex; justify-content:space-around;">
                    <p>0 Kr</p>
                    <p>0 Kr</p>
                    <p>0 Kr</p>
                    <p>0 Kr</p>
                    <p>0 Kr</p>
                </div>
            </div>
        </div>
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Number of Orders</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Today</p>
                    <p>Weekly</p>
                    <p>Monthly</p>
                    <p>Yearly</p>
                    <p>Since start</p>
                </div>
                <div style="display:flex; justify-content:space-around;">
                    <p>0</p>
                    <p>0</p>
                    <p>0</p>
                    <p>0</p>
                    <p>0</p>
                </div>
            </div>
        </div>
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Top 3 Categories(Most sold)</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>2nd</p>
                    <p>1st</p>
                    <p>3rd</p>
                </div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Product</p>
                    <p>Product</p>
                    <p>Product</p>
                </div>
            </div>
        </div>
        <div style="background-color:lightgray;border:2px solid black; border-radius: 16px; margin: 5%; padding: 5%;">
            <h3>Top 3 Products(Most sold)</h3>
            <div>
                <div style="display:flex; justify-content:space-around;">
                    <p>2nd</p>
                    <p>1st</p>
                    <p>3rd</p>
                </div>
                <div style="display:flex; justify-content:space-around;">
                    <p>Product</p>
                    <p>Product</p>
                    <p>Product</p>
                </div>
            </div>
        </div>
    </div>
}